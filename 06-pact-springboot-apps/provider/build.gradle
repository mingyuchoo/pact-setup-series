plugins {
  id 'org.springframework.boot' version '2.2.5.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id "au.com.dius.pact" version "3.6.14"
  id 'java'
  id 'war'
  id 'com.diffplug.gradle.spotless' version '3.28.1'
  id "com.wiredforcode.spawn" version "0.8.2"
}

group = 'com.mingyuchoo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'au.com.dius:pact-jvm-provider-spring_2.12:3.6.14'
  testImplementation 'au.com.dius:pact-jvm-provider-junit_2.12:3.6.14'
}

test {
  useJUnitPlatform()
}

task startServer(type: SpawnProcessTask, dependsOn: 'assemble') {
  command "java -jar ${war.archivePath}"
  ready 'Started MainApplication'
}

task stopServer(type: KillProcessTask) {
  
}

pact {
  serviceProviders {
      test_provider {
        //startProviderTask = startServer
        //terminateProviderTask = stopServer
        hasPactsFromPactBroker('http://localhost:9292/', authentication: ['Basic', 'admin', 'admin'])
    }
  }
  reports {
    defaultReports()
    markdown
    json
  }
}

spotless {
  java {
    target '**/*.java'

    importOrder 'java', 'javax', 'org', 'com', 'com.diffplug', ''
    googleJavaFormat('1.7').aosp()
    removeUnusedImports()
    trimTrailingWhitespace()
    indentWithSpaces(4)
    endWithNewline()
  }
  format 'misc', {
    target '**/*.yml', '**/*.gradle', '**/*.md', '**/.gitignore'

    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }
}
